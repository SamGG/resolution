devtools::use_package()
devtools::use_package(resolution)
devtools::use_package(Resolution)
devtools::use_package(resolution)
devtools::document()
?(resolution)
?(cluster_resolution)
devtools::create("resolution")
library(resolution)
person("Adolfo","Alvarez",email="adolfo.alvarez@analyx.com",role=c("aut","cre"))
library(resolution)
library(resolution)
library(resolution)
library(resolution)
help(cluster_resolution)
library(resolution)
library(resolution)
help(cluster_resolution)
library(resolution)
help(cluster_resolution)
library(resolution)
help(cluster_resolution)
help("NewNodesGroup")
library(resolution)
search()
library(resolution)
#2014
baza_out_full <- read_sav(path = "C:/Users/katarzyna.klamecka/Documents/VW/obliczenia/Forceatlas2/model_body/GERMANY/Samples for original data/NCBS2014 DE/baza_OUT_full.sav")
library("haven", lib.loc="~/R/win-library/3.2")
baza_out_full <- read_sav(path = "C:/Users/katarzyna.klamecka/Documents/VW/obliczenia/Forceatlas2/model_body/GERMANY/Samples for original data/NCBS2014 DE/baza_OUT_full.sav")
cluster_resolution(baza_out_full,directed = FALSE,t=1)
library(resolution)
library(resolution)
library(resolution)
library(resolution)
library(resolution)
library("haven", lib.loc="~/R/win-library/3.2")
baza_out_full <- read_sav(path = "C:/Users/katarzyna.klamecka/Documents/VW/obliczenia/Forceatlas2/model_body/GERMANY/Samples for original data/NCBS2014 DE/baza_OUT_full.sav")
cluster_resolution(baza_out_full,directed = FALSE,t=1)
library(resolution)
library(resolution)
library("haven", lib.loc="~/R/win-library/3.2")
baza_out_full <- read_sav(path = "C:/Users/katarzyna.klamecka/Documents/VW/obliczenia/Forceatlas2/model_body/GERMANY/Samples for original data/NCBS2014 DE/baza_OUT_full.sav")
cluster_resolution(baza_out_full,directed = FALSE,t=1)
library(resolution)
library(resolution)
setwd("C:/Users/katarzyna.klamecka/Documents/VW/obliczenia/Forceatlas2/function-changed-comparison/bigdata")
library("xlsx", lib.loc="~/R/win-library/3.2")
read.xlsx("time.xlsx",sheetIndex = 2)
time <- read.xlsx("time.xlsx",sheetIndex = 2)
time %>% select(nnodes:time.for.one.node)
library("dplyr", lib.loc="~/R/win-library/3.2")
time %>% select(nnodes:time.for.one.node)
time %>% select(nnodes:time.for.one.node) %>% filter(-5)
time %>% select(nnodes:time.for.one.node) %>% filter(1:4)
time %>% select(nnodes:time.for.one.node) %>% filter_(-5)
time %>% select(nnodes:time.for.one.node) %>% filter_(1:4)
time[1:4,] %>% select(nnodes:time.for.one.node)
time <- time[1:4,] %>% select(nnodes:time.for.one.node)
ggplot(time,aes(x=nrrow,y=CRtime))+geom_smooth()
library("ggplot2", lib.loc="~/R/win-library/3.2")
ggplot(time,aes(x=nrrow,y=CRtime))+geom_smooth()
lm(time$CRtime~time$nrrow)
ggplot(time,aes(x=nrrow,y=CRtime))+geom_point()
lm(time$CRtime~ln(time$nrrow))
lm(log(time$CRtime)~time$nrrow)
predict(model,1000000)
model <- lm(log(time$CRtime)~time$nrrow)
predict(model,1000000)
predict(model,c(1000000))
predict(model,c(999999:1000000))
c(999999:1000000)
predict(model,list(999999:1000000))
list(999999:1000000)
list(1000000)
predict(model,list(1000000))
predict(model)
forecast(model,1000000)
install.packages("forecast")
library("forecast", lib.loc="~/R/win-library/3.2")
forecast(model,1000000)
forecast(model,h=1)
predict(model,time$nrrow=1000000)
y <- time$CRtime
x <- time$nrrow
model <- lm(log(y)~x)
predict(model)
forecast(model,x=1000000)
new <- data.frame(x=1000000)
forecast(model,new)
exp(forecast(model,new))
log(y)
forecast(model,new)[1]
exp(14.50812)
exp(14.50812)/60
(exp(14.50812)/60)/60 #1998925
((exp(14.50812)/60)/60)/24 #1998925
model$rank
model
summary(model)
((exp(14.50812)/60)/60)/24 #1998925
new <- data.frame(x=c(1000000,100000000))
forecast(model,new)
table <- forecast(model,new)
table
table[,1]
class(table)
data.frame(table)
data.frame(table)[,1]
exp(data.frame(table)[,1])
exp(data.frame(table)[1,1])
exp(data.frame(table)[2,1])
((exp(data.frame(table)[,1])/60)/60)/24
exp(14.08779) #1998925
((exp(14.08779)/60)/60)/24 #
forecast(model,new)
forecast(model,new)
forecast(model,new)
library(resolution)
library(resolution)
library(igraph)
g <- nexus.get("miserables")
cluster_resolution(g,t=1,directed=FALSE)
library(resolution)
library(resolution)
library(resolution)
libaray(resolution)
library(resolution)
library(resolution)
library(igraph)
g <- nexus.get("miserables")
cluster_resolution(g,directer=FALSE,t=1)
cluster_resolution(g,directed=FALSE,t=1)
library(resolution)
library(resolution)
g <- nexus.get("miserables")
library(igraph)
g <- nexus.get("miserables")
library(igraph)
cluster_resolution(g,directed=FALSE,t=1)
library(resolution)
library("rmarkdown", lib.loc="~/R/win-library/3.2")
